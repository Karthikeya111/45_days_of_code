Problem statement: https://leetcode.com/problems/binary-tree-level-order-traversal/?envType=study-plan&id=data-structure-i

Code :

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
              
        if(root == NULL)return {};
        queue<TreeNode*>q;
        vector<vector<int>>v2;
        q.push(root);
        while(!q.empty())
        {    
            vector<int>v1;
        int size = q.size();
        for(int i = 0; i < size; i++)
        {
            TreeNode* current = q.front();
            q.pop();
            if(current->left)
            {
                q.push(current->left);
            }
            if(current->right)
            {
                q.push(current->right);
            }
                v1.push_back(current->val);

        }   
               v2.push_back(v1);

        }
        return v2;
    }
};
