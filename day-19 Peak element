Problem Statement : https://practice.geeksforgeeks.org/problems/peak-element/1

Code :

class Solution
{
    public:
    
    int binarypeak(int arr[],int n, int s,int e){
        s=0;
        e=n-1;
        int mid;
        
        while(s<=e){
                mid =  s+ (e-s)/2;

          if ((mid == 0 || arr[mid - 1] <= arr[mid])
            and (mid == n - 1 || arr[mid + 1] <= arr[mid])){
                            break;
            }
            if(mid>0 and arr[mid-1]>arr[mid]){
                e = mid-1;
            }else{
                s = mid+1;
            }
        }
        return mid;
    }
    int peakElement(int arr[], int n)
    {
       // Your code here
       return binarypeak(arr,n,0,n-1);
    }
};

Expected Time Complexity: O(log N)
Expected Auxiliary Space: O(1)
